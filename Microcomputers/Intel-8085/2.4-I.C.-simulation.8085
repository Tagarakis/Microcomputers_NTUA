;This program simulates the IC shown below:
;|----A3--B3-----A2--B2-----A1--B1-----A0--B0-----
;|     \  /       \  /       \  /       \  /     |
;|     AND        AND         OR         OR      |
;|      \          |_          \         /       |
;|       \           \         |\       /        |
;|        \           \        |   XOR           |
;|         \           \       |    |            |
;--x-x-x-x-X3----------X2------X1----X0----------|

;Where  x  LEDs are OFF all the time.         
 
;This example is the fourth exercise of the second set from 2019.
;
;KNOWN BUG IN TSIK SIMULATOR:
;It doesn't show results in rum mode. If you run it step by step it's ok.
  
START:	
	LDA 2000H
	MOV B,A		;B has the input byte
	LXI H,0900H	;the start of the storage memory block
	MVI C,01H	;C has the mask byte
	MVI E,00H	;E has the loop counter 
LOOP1:
	MOV A,B		;A takes the input byte
	ANA C		;mask the desired bit
	CPI 00H		;if it is 0 go to IS_ZERO ;and store 
	JZ IS_ZERO	it in memory. If it is 1(it will
	MVI A,01H	;be an 1 somewhere eg 00001000). I make 
IS_ZERO:		;it 01H and store it the right memory.
	MOV M,A		;the masked bit is stored
	MOV A,C
	RAL		;the new mask byte
	MOV C,A
	INX H		;HL++ (memory address)
	INR E		;E++ (loop counter)
	MOV A,E
	CPI 08H		;check if E = 8 and if not
	JNZ LOOP1	;goto LOOP!
			;here all bits of input are stored
			;0900H(LSB)...0907H(MSB)
	LDA 0900H
	MOV B,A
	LDA 0901H
	ORA B
	STA 0908H	;0908H has the A0||B0

	LDA 0902H
	MOV B,A
	LDA 0903H
	ORA B		
	STA 0909H	;0909H has the A1||B1

	LDA 0904H
	MOV B,A
	LDA 0905H
	ANA B		
	STA 0910H	;0910H has the A2&&B2
	
	LDA 0906H
	MOV B,A
	LDA 0907H
	ANA B		
	STA 0911H	;0911H has the A3&&B3

	LDA 0908H
	MOV B,A
	LDA 0909H
	XRA B
	STA 0912H	;0912 has the XOR bit

	MVI B,00H
	LDA 0912H
	ORA B
	MOV B,A		;fixed LSB

	LDA 0909H
	RAL
	ORA B
	MOV B,A		;fixed LSB + 1

	LDA 0910H
	RAL
	RAL
	ORA B
	MOV B,A		;fixed LSB + 2

	LDA 0911H
	RAL
	RAL
	RAL
	ORA B
	MOV B,A		;fixed LSB + 3
	
	MOV A,B
	CMA		;because of complementary output logic
	STA 3000H
	JMP START	;go to START, program of continuous time
END
